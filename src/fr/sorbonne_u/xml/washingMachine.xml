<control-adapter
	xmlns="http://www.sorbonne-universite.fr/alasca/control-adapter"
	uid="1A10002"
	offered="fr.sorbonne_u.components.washingMachine.WashingMachineCI"
	type="planning">
	<consumption nominal="2000"/>
	<required>java.lang.Math</required>
	<required>java.time.Duration</required>
	<required>java.time.LocalTime</required>
	<instance-var type="boolean" name="isPlanned" static-init="false"/>
	<instance-var type="LocalTime" name="startTime" static-init="null"/>
	<instance-var type="Duration" name="duration" static-init="null"/>
	<on>
		<body equipmentRef="washingMachine">
		return isPlanned || washingMachine.isRunning();
		</body>
	</on>
	<switchOn>
		<body equipmentRef="washingMachine">
		washingMachine.startWashingMachine();
		return true;
		</body>
	</switchOn>
	<switchOff>
		<body equipmentRef="washingMachine">
		washingMachine.stopWashingMachine();
		return true;
		</body>
	</switchOff>
	<mode-control>
		<maxMode><body>return 1;</body></maxMode>
		<upMode><body>return false;</body></upMode>
		<downMode><body>return false;</body></downMode>
		<setMode><parameter name="modeIndex"/><body>return false;</body></setMode>
		<currentMode><body>return 1;</body></currentMode>
	</mode-control>
	<planning-control>
		<hasPlan>
			<body>return isPlanned;</body>
		</hasPlan>
		<startTime>
			<body>
				return startTime;
			</body>
		</startTime>
		<duration>
			<body equipmentRef="washingMachine">
				return washingMachine.getDuration();
			</body>
		</duration>
    	<deadline>
    		<body>
    			if (isPlanned)
					return startTime.plus(duration);
				return null;
			</body>
		</deadline>
		<postpone><parameter name="d"/>
    		<body>
    		if (isPlanned)
    			startTime = startTime.plus(d)
    		return true;
			</body>
		</postpone>
		<cancel>
    		<body>
    			if (isPlanned)
    			{
    				isPlanned = false;
    				startTime = null;
    				duration = null;
    			}
    			return true;
			</body>
		</cancel>
	</planning-control>
</control-adapter>